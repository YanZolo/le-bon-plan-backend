{"version":3,"sources":["../../../src/controllers/products/productsController.ts"],"names":["ProductModel","ProductNotFound","ProductsController","getProduct","params","id","product","findById","getProducts","find","addProduct","body","title","price","newProduct","save","updateProduct","req","updatedProduct","deleteProduct","deleteOne","_id"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,8BAAzB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAGA,OAAO,MAAMC,kBAAN,CAAyB;AACd,QAAVC,UAAU,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV,GAAD,EAA8C;AAC5D,UAAMC,OAAO,GAAG,MAAMN,YAAY,CAACO,QAAb,CAAsBF,EAAtB,CAAtB;;AACA,QAAI,CAACC,OAAL,EAAc;AACZ,YAAM,IAAIL,eAAJ,EAAN;AACD;;AACD,WAAOK,OAAP;AACD;;AAEgB,QAAXE,WAAW,GAAG;AAClB,WAAOR,YAAY,CAACS,IAAb,EAAP;AACD;;AAEe,QAAVC,UAAU,CAAC;AACfC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AADS,GAAD,EAEwC;AACtD,UAAMC,UAAU,GAAG,IAAId,YAAJ,CAAiB;AAClCY,MAAAA,KADkC;AAElCC,MAAAA;AAFkC,KAAjB,CAAnB;AAIA,WAAOC,UAAU,CAACC,IAAX,EAAP;AACD;;AAEkB,QAAbC,aAAa,CACjBC,GADiB,EAEjB;AACA,UAAMX,OAAO,GAAG,MAAM,KAAKH,UAAL,CAAgBc,GAAhB,CAAtB;AACA,UAAM;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBI,GAAG,CAACN,IAA7B;;AAEA,QAAIC,KAAK,IAAIN,OAAO,CAACM,KAAR,KAAkBA,KAA/B,EAAsC;AACpCN,MAAAA,OAAO,CAACM,KAAR,GAAgBA,KAAhB;AACD;;AACD,QAAIC,KAAK,IAAIP,OAAO,CAACO,KAAR,KAAkBA,KAA/B,EAAsC;AACpCP,MAAAA,OAAO,CAACO,KAAR,GAAgBA,KAAhB;AACD;;AACD,UAAMK,cAAc,GAAG,IAAIlB,YAAJ,CAAiBM,OAAjB,CAAvB;AACA,WAAO,MAAMY,cAAc,CAACH,IAAf,EAAb;AACD;;AAEkB,QAAbI,aAAa,CAACF,GAAD,EAA+B;AAChD,UAAMX,OAAO,GAAG,MAAM,KAAKH,UAAL,CAAgBc,GAAhB,CAAtB;AACA,UAAMjB,YAAY,CAACoB,SAAb,CAAuB;AAAEC,MAAAA,GAAG,EAAEf,OAAO,CAACe;AAAf,KAAvB,CAAN;AACD;;AA1C6B","sourcesContent":["import ProductModel from '../../models/productModel.js';\r\nimport ProductNotFound from '../../errors/ProductNotFound.js';\r\nimport { Request } from 'express';\r\n\r\nexport class ProductsController {\r\n  async getProduct({ params: { id } }: Request<{ id: string }>) {\r\n    const product = await ProductModel.findById(id);\r\n    if (!product) {\r\n      throw new ProductNotFound();\r\n    }\r\n    return product;\r\n  }\r\n\r\n  async getProducts() {\r\n    return ProductModel.find();\r\n  }\r\n\r\n  async addProduct({\r\n    body: { title, price }\r\n  }: Request<any, any, { title: string; price: string }>) {\r\n    const newProduct = new ProductModel({\r\n      title,\r\n      price\r\n    });\r\n    return newProduct.save();\r\n  }\r\n\r\n  async updateProduct(\r\n    req: Request<{ id: string }, any, { title: string; price: number }>\r\n  ) {\r\n    const product = await this.getProduct(req);\r\n    const { title, price } = req.body;\r\n\r\n    if (title && product.title !== title) {\r\n      product.title = title;\r\n    }\r\n    if (price && product.price !== price) {\r\n      product.price = price;\r\n    }\r\n    const updatedProduct = new ProductModel(product);\r\n    return await updatedProduct.save();\r\n  }\r\n\r\n  async deleteProduct(req: Request<{ id: string }>) {\r\n    const product = await this.getProduct(req);\r\n    await ProductModel.deleteOne({ _id: product._id });\r\n  }\r\n}\r\n"],"file":"productsController.js"}