{"version":3,"sources":["../../../src/controllers/admin/adminController.ts"],"names":["UserModel","ProductModel","UserNotFound","ProductNotFound","AdminController","getAllUsers","find","getAllProducts","getUser","params","id","user","findById","getProduct","product","updateUser","req","username","email","password","body","userUpdated","save","updateProduct","title","price","updatedProduct","deleteUser","deleteOne","_id","deleteProduct"],"mappings":"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","sourcesContent":["import UserModel from '../../models/userModel.js';\r\nimport ProductModel from '../../models/productModel.js';\r\nimport UserNotFound from '../../errors/UserNotFound.js';\r\nimport ProductNotFound from '../../errors/ProductNotFound.js';\r\nimport { Request } from 'express';\r\n\r\nexport class AdminController {\r\n\r\n    async getAllUsers() {\r\n        return UserModel.find();\r\n    }\r\n    async getAllProducts() {\r\n        return ProductModel.find();\r\n    }\r\n\r\n    async getUser({ params: { id } }: Request<{ id: string }>) {\r\n        const user = await UserModel.findById(id);\r\n        if (!user) {\r\n            throw new UserNotFound();\r\n        }\r\n        // req.user = user;  how to pass user in req.user with typescript\r\n        return user;\r\n    }\r\n    async getProduct({ params: { id } }: Request<{ id: string }>) {\r\n        const product = await ProductModel.findById(id);\r\n        if (!product) {\r\n            throw new ProductNotFound();\r\n        }\r\n        return product;\r\n    }\r\n\r\n    async updateUser(\r\n        req: Request<\r\n            { id: string },\r\n            any,\r\n            { username: string; email: string; password: string }\r\n        >\r\n    ) {\r\n        const user = await this.getUser(req);\r\n        const { username, email, password } = req.body;\r\n        if (username && username !== user.username) {\r\n            user.username = username;\r\n        }\r\n        if (email && email !== user.email) {\r\n            user.email = email;\r\n        }\r\n        if (password && password !== user.password) {\r\n            user.password = password;\r\n        }\r\n        const userUpdated = new UserModel(user);\r\n        return await userUpdated.save();\r\n    }\r\n    async updateProduct(\r\n        req: Request<{ id: string }, any, { title: string; price: number }>\r\n    ) {\r\n        const product = await this.getProduct(req);\r\n        const { title, price } = req.body;\r\n\r\n        if (title && product.title !== title) {\r\n            product.title = title;\r\n        }\r\n        if (price && product.price !== price) {\r\n            product.price = price;\r\n        }\r\n        const updatedProduct = new ProductModel(product);\r\n        return await updatedProduct.save();\r\n    }\r\n\r\n    async deleteUser(req: Request<{ id: string }, any, any>) {\r\n        const user = await this.getUser(req);\r\n        await UserModel.deleteOne({ _id: user._id });\r\n    }\r\n\r\n    async deleteProduct(req: Request<{ id: string }>) {\r\n        const product = await this.getProduct(req);\r\n        await ProductModel.deleteOne({ _id: product._id });\r\n    }\r\n}"],"file":"adminController.js"}