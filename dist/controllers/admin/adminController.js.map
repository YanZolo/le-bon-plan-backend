{"version":3,"sources":["../../../src/controllers/admin/adminController.ts"],"names":["UserModel","ProductModel","UserNotFound","ProductNotFound","AdminController","addUser","body","username","email","password","isAdmin","newUser","save","addProduct","title","price","newProduct","getAllUsers","find","getAllProducts","getUser","params","id","user","findById","getProduct","product","updateUser","req","userUpdated","updateProduct","updatedProduct","deleteUser","deleteOne","_id","deleteProduct","displayRegisterView","res","render","displayLoginView"],"mappings":"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","sourcesContent":["import UserModel from '../../models/userModel.js';\r\nimport ProductModel from '../../models/productModel.js';\r\nimport UserNotFound from '../../errors/UserNotFound.js';\r\nimport ProductNotFound from '../../errors/ProductNotFound.js';\r\nimport { Request, Response } from 'express';\r\n\r\nexport class AdminController {\r\n\r\n    async addUser({ body: { username, email, password, isAdmin } }: Request<any, any, { username: string, email: string, password: string, isAdmin: boolean }>) {\r\n        const newUser = new UserModel({\r\n            username, email, password, isAdmin\r\n        })\r\n        return newUser.save()\r\n    }\r\n    async addProduct({ body: { title, price } }: Request<any, any, { title: string, price: number }>) {\r\n        const newProduct = new ProductModel({\r\n            title, price\r\n        })\r\n        return newProduct.save()\r\n    }\r\n\r\n    async getAllUsers() {\r\n        return UserModel.find();\r\n    }\r\n    async getAllProducts() {\r\n        return ProductModel.find();\r\n    }\r\n\r\n    async getUser({ params: { id } }: Request<{ id: string }>) {\r\n        const user = await UserModel.findById(id);\r\n        if (!user) {\r\n            throw new UserNotFound();\r\n        }\r\n        // req.user = user;  how to pass user in req.user with typescript\r\n        return user;\r\n    }\r\n    async getProduct({ params: { id } }: Request<{ id: string }>) {\r\n        const product = await ProductModel.findById(id);\r\n        if (!product) {\r\n            throw new ProductNotFound();\r\n        }\r\n        return product;\r\n    }\r\n\r\n    async updateUser(\r\n        req: Request<\r\n            { id: string },\r\n            any,\r\n            { username: string; email: string; password: string }\r\n        >\r\n    ) {\r\n        const user = await this.getUser(req);\r\n        const { username, email, password } = req.body;\r\n        if (username && username !== user.username) {\r\n            user.username = username;\r\n        }\r\n        if (email && email !== user.email) {\r\n            user.email = email;\r\n        }\r\n        if (password && password !== user.password) {\r\n            user.password = password;\r\n        }\r\n        const userUpdated = new UserModel(user);\r\n        return await userUpdated.save();\r\n    }\r\n    async updateProduct(\r\n        req: Request<{ id: string }, any, { title: string; price: number }>\r\n    ) {\r\n        const product = await this.getProduct(req);\r\n        const { title, price } = req.body;\r\n\r\n        if (title && product.title !== title) {\r\n            product.title = title;\r\n        }\r\n        if (price && product.price !== price) {\r\n            product.price = price;\r\n        }\r\n        const updatedProduct = new ProductModel(product);\r\n        return await updatedProduct.save();\r\n    }\r\n\r\n    async deleteUser(req: Request<{ id: string }, any, any>) {\r\n        const user = await this.getUser(req);\r\n        await UserModel.deleteOne({ _id: user._id });\r\n    }\r\n\r\n    async deleteProduct(req: Request<{ id: string }>) {\r\n        const product = await this.getProduct(req);\r\n        await ProductModel.deleteOne({ _id: product._id });\r\n    }\r\n    displayRegisterView(res: Response){\r\n       return res.render('register')\r\n    }\r\n    displayLoginView(res: Response){\r\n       return  res.render('login')\r\n    }\r\n}"],"file":"adminController.js"}