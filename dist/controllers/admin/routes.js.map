{"version":3,"sources":["../../../src/controllers/admin/routes.ts"],"names":["AdminController","createRouter","AuthController","adminController","authController","routes","path","method","handler","getAllUsers","bind","getAllProducts","getUser","getProduct","updateUser","deleteUser","handleLogin","handleRegister","handleLogout"],"mappings":"AAAA,SAASA,eAAT,QAAgC,sBAAhC;AACA,SAASC,YAAT,QAA4C,6BAA5C;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,MAAMC,eAAe,GAAG,IAAIH,eAAJ,EAAxB;AAEA,MAAMI,cAAc,GAAG,IAAIF,cAAJ,EAAvB;AAGA,MAAMG,MAAwB,GAAG,CAC7B;AACIC,EAAAA,IAAI,EAAE,kBADV;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAMIC,EAAAA,OAAO,EAAEL,eAAe,CAACM,WAAhB,CAA4BC,IAA5B,CAAiCP,eAAjC;AANb,CAD6B,EAS7B;AACIG,EAAAA,IAAI,EAAE,qBADV;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAMIC,EAAAA,OAAO,EAAEL,eAAe,CAACQ,cAAhB,CAA+BD,IAA/B,CAAoCP,eAApC;AANb,CAT6B,EAiB7B;AACIG,EAAAA,IAAI,EAAE,iBADV;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAMIC,EAAAA,OAAO,EAAEL,eAAe,CAACS,OAAhB,CAAwBF,IAAxB,CAA6BP,eAA7B;AANb,CAjB6B,EAyB7B;AACIG,EAAAA,IAAI,EAAE,oBADV;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAMIC,EAAAA,OAAO,EAAEL,eAAe,CAACU,UAAhB,CAA2BH,IAA3B,CAAgCP,eAAhC;AANb,CAzB6B,EAiC7B;AACIG,EAAAA,IAAI,EAAE,wBADV;AAEIC,EAAAA,MAAM,EAAE,OAFZ;AAMIC,EAAAA,OAAO,EAAEL,eAAe,CAACW,UAAhB,CAA2BJ,IAA3B,CAAgCP,eAAhC;AANb,CAjC6B,EAyC7B;AACIG,EAAAA,IAAI,EAAE,2BADV;AAEIC,EAAAA,MAAM,EAAE,OAFZ;AAMIC,EAAAA,OAAO,EAAEL,eAAe,CAACW,UAAhB,CAA2BJ,IAA3B,CAAgCP,eAAhC;AANb,CAzC6B,EAiD7B;AACIG,EAAAA,IAAI,EAAE,wBADV;AAEIC,EAAAA,MAAM,EAAE,QAFZ;AAMIC,EAAAA,OAAO,EAAEL,eAAe,CAACY,UAAhB,CAA2BL,IAA3B,CAAgCP,eAAhC;AANb,CAjD6B,EAyD7B;AACIG,EAAAA,IAAI,EAAE,aADV;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAMIC,EAAAA,OAAO,EAAEJ,cAAc,CAACY,WAAf,CAA2BN,IAA3B,CAAgCN,cAAhC;AANb,CAzD6B,EAiE7B;AACIE,EAAAA,IAAI,EAAE,gBADV;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAMIC,EAAAA,OAAO,EAAEJ,cAAc,CAACa,cAAf,CAA8BP,IAA9B,CAAmCN,cAAnC;AANb,CAjE6B,EAyE7B;AACIE,EAAAA,IAAI,EAAE,cADV;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAMIC,EAAAA,OAAO,EAAEJ,cAAc,CAACc,YAAf,CAA4BR,IAA5B,CAAiCN,cAAjC;AANb,CAzE6B,CAAjC;AAoFA,eAAeH,YAAY,CAACI,MAAD,CAA3B","sourcesContent":["import { AdminController } from \"./adminController.js\";\nimport { createRouter, RoutesOptions } from \"../../utils/createRouter.js\";\nimport AuthController from \"../auth/authController.js\";\nconst adminController = new AdminController();\n// const middlewares = new Middlewares();\nconst authController = new AuthController()\n\n\nconst routes : RoutesOptions[] = [\n    {\n        path: '/admin/users/all',\n        method: 'GET',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: adminController.getAllUsers.bind(adminController)\n    },\n    {\n        path: '/admin/products/all',\n        method: 'GET',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: adminController.getAllProducts.bind(adminController)\n    },\n    {\n        path: '/admin/user/:id',\n        method: 'GET',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: adminController.getUser.bind(adminController)\n    },\n    {\n        path: '/admin/product/:id',\n        method: 'GET',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: adminController.getProduct.bind(adminController)\n    },\n    {\n        path: '/admin/user/update/:id',\n        method: 'PATCH',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: adminController.updateUser.bind(adminController)\n    },\n    {\n        path: '/admin/product/update/:id',\n        method: 'PATCH',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: adminController.updateUser.bind(adminController)\n    },\n    {\n        path: '/admin/user/delete/:id',\n        method: 'DELETE',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: adminController.deleteUser.bind(adminController)\n    },\n    {\n        path: '/auth/login',\n        method: 'POST',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: authController.handleLogin.bind(authController)\n    },\n    {\n        path: '/auth/register',\n        method: 'POST',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: authController.handleRegister.bind(authController)\n    },\n    {\n        path: '/auth/logout',\n        method: 'GET',\n        // pre: [\n        //     middlewares.isAuth.bind(middlewares)\n        //   ],\n        handler: authController.handleLogout.bind(authController)\n    },\n\n]\n\nexport default createRouter(routes);"],"file":"routes.js"}