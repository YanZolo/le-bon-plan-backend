{"version":3,"sources":["../../src/middlewares/Auth.ts"],"names":["dotenv","jwt","config","ACCESS_TOKEN_SECRET","process","env","Middlewares","isAuth","req","res","next","token","cookies","verify","redirect","isNotAuth"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEAD,MAAM,CAACE,MAAP;AAKA,MAAM;AAAEC,EAAAA;AAAF,IAA0BC,OAAO,CAACC,GAAxC;AACA,OAAO,MAAMC,WAAN,CAAkB;AACvBC,EAAAA,MAAM,CACJC,GADI,EAEJC,GAFI,EAGJC,IAHI,EAIE;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAYH,GAAG,CAACI,OAAtB;;AACA,QAAID,KAAK,IAAIV,GAAG,CAACY,MAAJ,CAAWF,KAAX,EAAkBR,mBAAlB,CAAb,EAAqD;AACnD,aAAOO,IAAI,EAAX;AACD;;AACDD,IAAAA,GAAG,CAACK,QAAJ,CAAa,GAAb;AACD;;AACDC,EAAAA,SAAS,CACPP,GADO,EAEPC,GAFO,EAGPC,IAHO,EAID;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAYH,GAAG,CAACI,OAAtB;;AACA,QAAI,CAACD,KAAL,EAAY;AACV,aAAOD,IAAI,EAAX;AACD;AACF;;AArBsB","sourcesContent":["import dotenv from 'dotenv';\nimport jwt from 'jsonwebtoken';\nimport { Response, Request, NextFunction } from 'express';\ndotenv.config();\n\ninterface ProcessEnv {\n  [key: string]: string;\n}\nconst { ACCESS_TOKEN_SECRET } = process.env as ProcessEnv;\nexport class Middlewares {\n  isAuth(\n    req: Request<any, any, any, any, { token: string }>,\n    res: Response,\n    next: NextFunction\n  ): void {\n    const { token } = req.cookies;\n    if (token && jwt.verify(token, ACCESS_TOKEN_SECRET)) {\n      return next();\n    }\n    res.redirect('/'); // the path '/' redirect to login page (in index.ts)\n  }\n  isNotAuth(\n    req: Request<any, any, any, any, { token: string }>,\n    res: Response,\n    next: NextFunction\n  ): void {\n    const { token } = req.cookies;\n    if (!token) {\n      return next();\n    }\n  }\n}\n"],"file":"Auth.js"}