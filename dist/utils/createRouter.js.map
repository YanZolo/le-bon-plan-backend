{"version":3,"sources":["../../src/utils/createRouter.ts"],"names":["express","createRouter","routes","router","Router","forEach","route","method","toLowerCase","path","createHandler","handler","responseStatus","req","res","result","status","json","e","name","message","stack","process","env","NODE_ENV"],"mappings":"AAAA,OAAOA,OAAP,MAA2C,SAA3C;AAQA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA+C;AACpD,QAAMC,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAgBC,KAAD,IAAW;AACxB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAAN,CAAaC,WAAb,EAAf;AACAL,IAAAA,MAAM,CAACI,MAAD,CAAN,CAAeD,KAAK,CAACG,IAArB,EAA2BC,aAAa,CAACJ,KAAD,CAAxC;AACD,GAHD;AAIA,SAAOH,MAAP;AACD;AAED,OAAO,SAASO,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAc,GAAG;AAA5B,CAAvB,EAA8E;AACnF,SAAO,OAAOC,GAAP,EAAqBC,GAArB,KAAuC;AAC5C,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMJ,OAAO,CAACE,GAAD,CAA5B;AACAC,MAAAA,GAAG,CAACE,MAAJ,CAAWJ,cAAX,EAA2BK,IAA3B,CAAgCF,MAAhC;AACD,KAHD,CAGE,OAAOG,CAAP,EAAe;AACfJ,MAAAA,GAAG,CAACE,MAAJ,CAAWE,CAAC,CAACF,MAAF,IAAY,GAAvB,EAA4BC,IAA5B,CAAiC;AAC/BE,QAAAA,IAAI,EAAED,CAAC,CAACC,IAAF,IAAU,gBADe;AAE/BC,QAAAA,OAAO,EAAEF,CAAC,CAACE,OAFoB;AAG/BJ,QAAAA,MAAM,EAAEE,CAAC,CAACF,MAAF,IAAY,GAHW;AAI/BK,QAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,CAAC,CAACG,KAA1C,GAAkD;AAJ1B,OAAjC;AAMD;AACF,GAZD;AAaD","sourcesContent":["import express, { Request, Response } from 'express';\r\nexport interface RoutesOptions {\r\n  path: string;\r\n  method: string;\r\n  handler: Function; // temporary fixed with rule \"@typescript-eslint/ban-types\":\"off\" in eslintrc.json :/\r\n  responseStatus?: number;\r\n}\r\n\r\nexport function createRouter(routes: RoutesOptions[]) {\r\n  const router = express.Router();\r\n  routes.forEach((route) => {\r\n    const method = route.method.toLowerCase();\r\n    router[method](route.path, createHandler(route));\r\n  });\r\n  return router;\r\n}\r\n\r\nexport function createHandler({ handler, responseStatus = 200 }: RoutesOptions): any {\r\n  return async (req: Request, res: Response) => {\r\n    try {\r\n      const result = await handler(req);\r\n      res.status(responseStatus).json(result);\r\n    } catch (e: any) {\r\n      res.status(e.status || 500).json({\r\n        name: e.name || 'INTERNAL_ERROR',\r\n        message: e.message,\r\n        status: e.status || 500,\r\n        stack: process.env.NODE_ENV !== 'production' ? e.stack : null\r\n      });\r\n    }\r\n  };\r\n}\r\n"],"file":"createRouter.js"}