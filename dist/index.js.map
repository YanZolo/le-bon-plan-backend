{"version":3,"sources":["../src/index.ts"],"names":["dotenv","express","productRoutes","adminRoutes","versionRoutes","startDB","path","fileURLToPath","cookieParser","cors","config","app","url","process","env","DB_URL","__filename","import","meta","__dirname","dirname","PORT","disable","set","join","use","json","static","get","req","res","render","send","connect","then","listen","console","log","catch","err","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAwD,SAAxD;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,KAA9B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACAT,MAAM,CAACU,MAAP;AACA,MAAMC,GAAgB,GAAGV,OAAO,EAAhC;AACA,MAAMW,GAAuB,GAAGC,OAAO,CAACC,GAAR,CAAYC,MAA5C;;AACA,MAAMC,UAAkB,GAAGT,aAAa,CAACU,MAAM,CAACC,IAAP,CAAYN,GAAb,CAAxC;;AACA,MAAMO,SAAiB,GAAGb,IAAI,CAACc,OAAL,CAAaJ,UAAb,CAA1B;;AACA,MAAMK,IAAiC,GAAGR,OAAO,CAACC,GAAR,CAAYO,IAAZ,IAAoB,IAA9D;AAEAV,GAAG,CAACW,OAAJ,CAAY,cAAZ;AACAX,GAAG,CAACY,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAZ,GAAG,CAACY,GAAJ,CAAQ,OAAR,EAAiBjB,IAAI,CAACkB,IAAL,CAAUL,SAAV,EAAqB,IAArB,EAA2B,OAA3B,CAAjB;AAEAR,GAAG,CAACc,GAAJ,CAAQxB,OAAO,CAACyB,IAAR,EAAR;AAEAf,GAAG,CAACc,GAAJ,CAAQxB,OAAO,CAAC0B,MAAR,CAAe,SAAf,CAAR;AACAhB,GAAG,CAACc,GAAJ,CAAQhB,IAAI,EAAZ;AACAE,GAAG,CAACc,GAAJ,CAAQjB,YAAY,EAApB;AACAG,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAarB,aAAb;AACAO,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAavB,aAAb;AACAS,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAatB,WAAb;AAEAQ,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAeC,GAAf,KAAiC;AAC5CA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX;AACD,CAFD;AAGApB,GAAG,CAACiB,GAAJ,CAAQ,SAAR,EAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BA,EAAAA,GAAG,CAACE,IAAJ,CAAS,IAAT;AACD,CAFD;;AAIA,CAAC,SAASC,OAAT,GAAmB;AAClB5B,EAAAA,OAAO,CAACO,GAAD,CAAP,CACGsB,IADH,CACQ,MAAM;AACVvB,IAAAA,GAAG,CAACwB,MAAJ,CAAWd,IAAX,EAAiB,MAAM;AACrBe,MAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBhB,IAAK,EAA3C;AACD,KAFD;AAGD,GALH,EAMGiB,KANH,CAMUC,GAAD,IAAS;AACdH,IAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,GARH;AASD,CAVD","sourcesContent":["import dotenv from 'dotenv';\r\nimport express, { Application, Request, Response } from 'express';\r\nimport productRoutes from './controllers/products/routes.js';\r\nimport adminRoutes from './controllers/admin/routes.js';\r\nimport versionRoutes from './controllers/version/routes.js';\r\nimport startDB from './db/connect.js';\r\nimport path from 'path';\r\nimport { fileURLToPath } from 'url';\r\nimport cookieParser from 'cookie-parser';\r\nimport cors from 'cors';\r\ndotenv.config();\r\nconst app: Application = express();\r\nconst url: string | undefined = process.env.DB_URL;\r\nconst __filename: string = fileURLToPath(import.meta.url);\r\nconst __dirname: string = path.dirname(__filename);\r\nconst PORT: string | number | undefined = process.env.PORT || 8888;\r\n\r\napp.disable('x-powered-by');\r\napp.set('view engine', 'ejs');\r\napp.set('views', path.join(__dirname, '..', 'views'));\r\n\r\napp.use(express.json());\r\n// app.use(express.urlencoded({ extended: false }));\r\napp.use(express.static('public/'));\r\napp.use(cors());\r\napp.use(cookieParser());\r\napp.use('/', versionRoutes);\r\napp.use('/', productRoutes);\r\napp.use('/', adminRoutes);\r\n\r\napp.get('/', (req: Request, res: Response) => {\r\n  res.render('login');\r\n});\r\napp.get('/health', (req, res) => {\r\n  res.send('ok');\r\n});\r\n\r\n(function connect() {\r\n  startDB(url)\r\n    .then(() => {\r\n      app.listen(PORT, () => {\r\n        console.log(`server started at port ${PORT}`);\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n})();\r\n"],"file":"index.js"}